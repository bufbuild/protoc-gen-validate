# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: harness.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='harness.proto',
  package='tests.harness',
  syntax='proto3',
  serialized_options=_b('Z\007harness'),
  serialized_pb=_b('\n\rharness.proto\x12\rtests.harness\x1a\x19google/protobuf/any.proto\"1\n\x08TestCase\x12%\n\x07message\x18\x01 \x01(\x0b\x32\x14.google.protobuf.Any\"P\n\nTestResult\x12\r\n\x05Valid\x18\x01 \x01(\x08\x12\r\n\x05\x45rror\x18\x02 \x01(\x08\x12\x0e\n\x06Reason\x18\x03 \x01(\t\x12\x14\n\x0c\x41llowFailure\x18\x04 \x01(\x08\x42\tZ\x07harnessb\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_any__pb2.DESCRIPTOR,])




_TESTCASE = _descriptor.Descriptor(
  name='TestCase',
  full_name='tests.harness.TestCase',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='tests.harness.TestCase.message', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=59,
  serialized_end=108,
)


_TESTRESULT = _descriptor.Descriptor(
  name='TestResult',
  full_name='tests.harness.TestResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Valid', full_name='tests.harness.TestResult.Valid', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='Error', full_name='tests.harness.TestResult.Error', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='Reason', full_name='tests.harness.TestResult.Reason', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='AllowFailure', full_name='tests.harness.TestResult.AllowFailure', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=110,
  serialized_end=190,
)

_TESTCASE.fields_by_name['message'].message_type = google_dot_protobuf_dot_any__pb2._ANY
DESCRIPTOR.message_types_by_name['TestCase'] = _TESTCASE
DESCRIPTOR.message_types_by_name['TestResult'] = _TESTRESULT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TestCase = _reflection.GeneratedProtocolMessageType('TestCase', (_message.Message,), dict(
  DESCRIPTOR = _TESTCASE,
  __module__ = 'harness_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.TestCase)
  ))
_sym_db.RegisterMessage(TestCase)

TestResult = _reflection.GeneratedProtocolMessageType('TestResult', (_message.Message,), dict(
  DESCRIPTOR = _TESTRESULT,
  __module__ = 'harness_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.TestResult)
  ))
_sym_db.RegisterMessage(TestResult)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
