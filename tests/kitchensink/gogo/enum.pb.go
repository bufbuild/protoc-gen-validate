// Code generated by protoc-gen-gogo.
// source: enum.proto
// DO NOT EDIT!

/*
Package tests_kitchensink is a generated protocol buffer package.

It is generated from these files:
	enum.proto
	map.proto
	bool.proto
	sint32.proto
	fixed64.proto
	message.proto
	disabled.proto
	uint64.proto
	uint32.proto
	duration.proto
	bytes.proto
	sfixed32.proto
	wrapper.proto
	repeated.proto
	string.proto
	oneof.proto
	float.proto
	any.proto
	int64.proto
	timestamp.proto
	fixed32.proto
	sint64.proto
	sfixed64.proto
	int32.proto

It has these top-level messages:
	Enum
	Map
	Bool
	SInt32
	Fixed64
	Message
	Disabled
	UInt64
	UInt32
	Duration
	Bytes
	SFixed32
	Wrappers
	Repeated
	String
	OneOf
	Float
	Any
	Int64
	Timestamp
	Fixed32
	SInt64
	SFixed64
	Int32
*/
package tests_kitchensink

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/lyft/protoc-gen-validate/validate"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type MyEnum int32

const (
	MyEnum_default MyEnum = 0
	MyEnum_foo     MyEnum = 1
	MyEnum_bar     MyEnum = 2
	MyEnum_baz     MyEnum = 2
	MyEnum_fizz    MyEnum = 3
	MyEnum_buzz    MyEnum = 4
)

var MyEnum_name = map[int32]string{
	0: "default",
	1: "foo",
	2: "bar",
	// Duplicate value: 2: "baz",
	3: "fizz",
	4: "buzz",
}
var MyEnum_value = map[string]int32{
	"default": 0,
	"foo":     1,
	"bar":     2,
	"baz":     2,
	"fizz":    3,
	"buzz":    4,
}

func (x MyEnum) String() string {
	return proto.EnumName(MyEnum_name, int32(x))
}
func (MyEnum) EnumDescriptor() ([]byte, []int) { return fileDescriptorEnum, []int{0} }

type Enum struct {
	None        MyEnum `protobuf:"varint,1,opt,name=none,proto3,enum=tests.kitchensink.MyEnum" json:"none,omitempty"`
	Const       MyEnum `protobuf:"varint,2,opt,name=const,proto3,enum=tests.kitchensink.MyEnum" json:"const,omitempty"`
	DefinedOnly MyEnum `protobuf:"varint,3,opt,name=defined_only,json=definedOnly,proto3,enum=tests.kitchensink.MyEnum" json:"defined_only,omitempty"`
	In          MyEnum `protobuf:"varint,4,opt,name=in,proto3,enum=tests.kitchensink.MyEnum" json:"in,omitempty"`
	NotIn       MyEnum `protobuf:"varint,5,opt,name=not_in,json=notIn,proto3,enum=tests.kitchensink.MyEnum" json:"not_in,omitempty"`
}

func (m *Enum) Reset()                    { *m = Enum{} }
func (m *Enum) String() string            { return proto.CompactTextString(m) }
func (*Enum) ProtoMessage()               {}
func (*Enum) Descriptor() ([]byte, []int) { return fileDescriptorEnum, []int{0} }

func (m *Enum) GetNone() MyEnum {
	if m != nil {
		return m.None
	}
	return MyEnum_default
}

func (m *Enum) GetConst() MyEnum {
	if m != nil {
		return m.Const
	}
	return MyEnum_default
}

func (m *Enum) GetDefinedOnly() MyEnum {
	if m != nil {
		return m.DefinedOnly
	}
	return MyEnum_default
}

func (m *Enum) GetIn() MyEnum {
	if m != nil {
		return m.In
	}
	return MyEnum_default
}

func (m *Enum) GetNotIn() MyEnum {
	if m != nil {
		return m.NotIn
	}
	return MyEnum_default
}

func init() {
	proto.RegisterType((*Enum)(nil), "tests.kitchensink.Enum")
	proto.RegisterEnum("tests.kitchensink.MyEnum", MyEnum_name, MyEnum_value)
}

func init() { proto.RegisterFile("enum.proto", fileDescriptorEnum) }

var fileDescriptorEnum = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0x47, 0x3b, 0x7f, 0x92, 0xf4, 0xbb, 0x2d, 0x65, 0xbe, 0xd9, 0x38, 0x76, 0x15, 0x5c, 0x89,
	0x60, 0x04, 0x5d, 0x89, 0xe0, 0x42, 0x10, 0xea, 0x42, 0x84, 0xbc, 0x40, 0x49, 0x9a, 0x09, 0x0e,
	0x4d, 0xef, 0x48, 0x33, 0x11, 0x92, 0x65, 0x5e, 0x4a, 0x70, 0xe5, 0xeb, 0xf8, 0x16, 0x32, 0x8d,
	0xae, 0x5c, 0xc4, 0xdd, 0x81, 0x7b, 0xce, 0x6f, 0x73, 0x01, 0x34, 0x36, 0xbb, 0xe4, 0x65, 0x6f,
	0x9d, 0x95, 0xff, 0x9d, 0xae, 0x5d, 0x9d, 0x6c, 0x8d, 0xdb, 0x3c, 0x6b, 0xac, 0x0d, 0x6e, 0x97,
	0x47, 0xaf, 0x59, 0x65, 0x8a, 0xcc, 0xe9, 0x8b, 0x1f, 0x18, 0xdc, 0x93, 0x37, 0x0a, 0xfc, 0x1e,
	0x9b, 0x9d, 0x3c, 0x07, 0x8e, 0x16, 0xb5, 0x22, 0x31, 0x39, 0x5d, 0x5c, 0x1e, 0x27, 0xbf, 0x36,
	0x92, 0xc7, 0xd6, 0x8b, 0xe9, 0x41, 0x93, 0x37, 0x10, 0x6c, 0x2c, 0xd6, 0x4e, 0xd1, 0x11, 0xff,
	0x0e, 0xde, 0x3f, 0x3f, 0x58, 0xd0, 0x13, 0x3a, 0x65, 0xe9, 0xd0, 0xc8, 0x15, 0xcc, 0x0b, 0x5d,
	0x1a, 0xd4, 0xc5, 0xda, 0x62, 0xd5, 0x2a, 0xf6, 0xe7, 0x0d, 0x41, 0xd2, 0xd9, 0x77, 0xfa, 0x84,
	0x55, 0x2b, 0xaf, 0x81, 0x1a, 0x54, 0x7c, 0xac, 0x5f, 0xf8, 0xfe, 0x5f, 0x4f, 0x42, 0x35, 0x51,
	0x44, 0xb1, 0x94, 0x1a, 0x94, 0xb7, 0x10, 0xa2, 0x75, 0x6b, 0x83, 0x2a, 0x18, 0xcb, 0xe7, 0x3e,
	0x8f, 0x7a, 0xc2, 0x63, 0x1a, 0xf3, 0x34, 0x40, 0xeb, 0x1e, 0xf0, 0x6c, 0x05, 0xe1, 0x70, 0x96,
	0x33, 0x88, 0x0a, 0x5d, 0x66, 0x4d, 0xe5, 0xc4, 0x44, 0x46, 0xc0, 0x4a, 0x6b, 0x05, 0xf1, 0x90,
	0x67, 0x7b, 0x41, 0x07, 0xe8, 0x04, 0x95, 0x53, 0xe0, 0xa5, 0xe9, 0x3a, 0xc1, 0x3c, 0xe5, 0x4d,
	0xd7, 0x09, 0xbe, 0xa4, 0x82, 0xe4, 0xe1, 0xe1, 0x15, 0x57, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xf9, 0xcf, 0xf6, 0x22, 0xc4, 0x01, 0x00, 0x00,
}
