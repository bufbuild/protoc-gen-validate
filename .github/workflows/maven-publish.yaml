# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
## For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Deploy

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SONATYPE_USER: ${{secrets.SONATYPE_USER}}
      SONATYPE_PASSWORD: ${{secrets.SONATYPE_PASSWORD}}
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      GPG_KEY_NAME: ${{secrets.GPG_KEY_NAME}}
      GPG_PASSPHRASE: ${{secrets.GPG_PASSPHRASE}}
      MAVEN_USERNAME: ${ SONATYPE_USER }
      MAVEN_CENTRAL_TOKEN: ${ SONATYPE_PASSWORD }
      MAVEN_GPG_PASSPHRASE: ${ GPG_PASSPHRASE }
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          server-id: sonatype-nexus-snapshots
          server-username: ${{ env.SONATYPE_USER }}
          server-password: ${{ env.SONATYPE_PASSWORD }}
          gpg-private-key: ${{ env.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ env.GPG_PASSPHRASE }}

      - name: Configure Git User
        run: |
          git config --global user.email "envoy-bot@users.noreply.github.com"
          git config --global user.name "envoy-bot"

      - name: Install with Maven
        working-directory: ${{ github.workspace }}/java
        run: mvn -B install

      - name: 'Configure gpg signing'
        env:
          GPG_KEY: ${{ secrets.gpg_key }}
          GPG_KEY_NAME: ${{ secrets.gpg_key_name }}
          GPG_PASSPHRASE: ${{ secrets.gpg_passphrase }}
        run: |
          # https://github.com/keybase/keybase-issues/issues/2798
          export GPG_TTY=$(tty)
          # Import gpg keys and warm the passphrase to avoid the gpg
          # passphrase prompt when initating a deploy
          # `--pinentry-mode=loopback` could be needed to ensure we
          # suppress the gpg prompt
          echo $GPG_KEY | base64 --decode > signing-key
          gpg --passphrase $GPG_PASSPHRASE --batch --import signing-key
          shred signing-key
          
          find . -type f \( -iname "pom.xml" -o -iname "*.jar" \) -print0 | while read -d $'\0' file
          do
            gpg --pinentry-mode=loopback --passphrase $GPG_PASSPHRASE -ab $file
          done

      - name: 'Release to sonatype repository'
        working-directory: ${{ github.workspace }}/java
        env:
          READWRITE_USER: ${{ secrets.SONATYPE_USER }}
          READWRITE_API_KEY: ${{ secrets.SONATYPE_PASSWORD }}
          ENVOY_PROXY_PROFILE_ID: ${{ secrets.ENVOY_PROXY_PROFILE_ID }}
        run: |
          python sonatype_nexus_upload.py \
            --profile_id=$ENVOY_PROXY_PROFILE_ID \
            --version=${{ github.ref_name }} \
            --files \
              ./pgv-test-coverage-report/pom.xml \
              ./pgv-java-grpc/pom.xml \
              ./pom.xml \
              ./pgv-java-validation/pom.xml \
              ./pgv-artifacts/pom.xml \
              ./pgv-java-stub/pom.xml \
              ./pgv-test-coverage-report/target/pgv-test-coverage-report-0.6.9-rc.0-SNAPSHOT.jar \
              ./pgv-java-grpc/target/pgv-java-grpc-0.6.9-rc.0-SNAPSHOT.jar \
              ./pgv-java-grpc/target/pgv-java-grpc-0.6.9-rc.0-SNAPSHOT-sources.jar \
              ./pgv-java-validation/target/pgv-java-validation-0.6.9-rc.0-SNAPSHOT-sources.jar \
              ./pgv-java-validation/target/pgv-java-validation-0.6.9-rc.0-SNAPSHOT.jar \
              ./pgv-java-stub/target/pgv-java-stub-0.6.9-rc.0-SNAPSHOT.jar \
              ./pgv-java-stub/target/pgv-java-stub-0.6.9-rc.0-SNAPSHOT-sources.jar \
            --signed_files \
              ./pgv-test-coverage-report/pom.xml.asc \
              ./pgv-java-grpc/pom.xml.asc \
              ./pom.xml.asc \
              ./pgv-java-validation/pom.xml.asc \
              ./pgv-artifacts/pom.xml.asc \
              ./pgv-java-stub/pom.xml.asc \
              ./pgv-test-coverage-report/target/pgv-test-coverage-report-0.6.9-rc.0-SNAPSHOT.jar.asc \
              ./pgv-java-grpc/target/pgv-java-grpc-0.6.9-rc.0-SNAPSHOT.jar.asc \
              ./pgv-java-grpc/target/pgv-java-grpc-0.6.9-rc.0-SNAPSHOT-sources.jar.asc \
              ./pgv-java-validation/target/pgv-java-validation-0.6.9-rc.0-SNAPSHOT.jar.asc \
              ./pgv-java-validation/target/pgv-java-validation-0.6.9-rc.0-SNAPSHOT-sources.jar.asc \
              ./pgv-java-stub/target/pgv-java-stub-0.6.9-rc.0-SNAPSHOT.jar.asc \
              ./pgv-java-stub/target/pgv-java-stub-0.6.9-rc.0-SNAPSHOT-sources.jar.asc
