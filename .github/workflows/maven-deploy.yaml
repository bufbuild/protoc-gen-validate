# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
## For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Deploy

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SONATYPE_USER: ${{secrets.SONATYPE_USER}}
      SONATYPE_PASSWORD: ${{secrets.SONATYPE_PASSWORD}}
      GPG_KEY_NAME: ${{secrets.GPG_KEY_NAME}}
      GPG_PASSPHRASE: ${{secrets.GPG_PASSPHRASE}}
      MAVEN_USERNAME: ${{secrets.SONATYPE_USER}}
      MAVEN_CENTRAL_TOKEN: ${{secrets.SONATYPE_PASSWORD}}
      MAVEN_GPG_PASSPHRASE: ${{secrets.GPG_PASSPHRASE}}

    steps:
      - uses: actions/checkout@v3
#      - name: Set up JDK
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '11'


#      - name: Publish to GitHub Packages Apache Maven
#        working-directory: ${{ github.workspace }}/java
#        run: mvn deploy
#        env:
#          GITHUB_TOKEN: ${{ github.token }} # GITHUB_TOKEN is the default env for the password

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v3
        with: # running setup-java again overwrites the settings.xml
          distribution: 'temurin'
          java-version: '11'
          server-id: sonatype-nexus-snapshots # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Build with Maven
        working-directory: ${{ github.workspace }}/java
        run: mvn -B package --file pom.xml

      - name: Publish to Apache Maven Central
        working-directory: ${{ github.workspace }}/java
        run: mvn deploy -s settings.xml
        env:
          MAVEN_USERNAME: ${{secrets.SONATYPE_USER}}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
